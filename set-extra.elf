%%%%% set-extra.elf
%%%%% Extra theorems about sets not derived from map.
%%%%% This file is part of the set.elf signature



%%%% Theorems


%theorem add-preserves-member :
	forall* {S} {N1} {N2} {S'}
	forall	{SM: lookup S N1 unit/}
		{SA: update S N2 unit/ S'}
	exists	{SM': lookup S' N1 unit/}
	true.

%theorem add-preserves-member/L :
	forall* {S} {N1} {N2} {S'} {B}
	forall	{SM: lookup S N1 unit/}
		{SA: update S N2 unit/ S'}
		{EQ?: nat`eq? N1 N2 B}
	exists	{SM': lookup S' N1 unit/}
	true.

- : add-preserves-member/L SM SA (nat`eq?/no NE) SM'
    <- update-preserves-lookup SM SA NE SM'.

- : add-preserves-member/L _ SA (nat`eq?/yes) SM'
    <- update-implies-lookup SA SM'.

%worlds () (add-preserves-member/L _ _ _ _).
%total { } (add-preserves-member/L _ _ _ _).

- : add-preserves-member SM SA SM'
    <- nat`eq?-total EQ?
    <- add-preserves-member/L SM SA EQ? SM'.

%worlds () (add-preserves-member _ _ _).
%total { } (add-preserves-member _ _ _).


%theorem union-right-distributes-over-intersection :
	forall* {S1} {S2} {S3} {S4} {S7}
        forall {I12:intersection S1 S2 S3} {U34:union S3 S4 S7}
        exists {S5} {S6} {U14:union S1 S4 S5} {U24:union S2 S4 S6}
               {I56:intersection S5 S6 S7}
	true.

- : union-right-distributes-over-intersection S1*S2=S3 S3+S4=S7 S5 S6
                                              S1+S4=S5 S2+S4=S6 S5*S6=S7
    <- union-total S1+S4=S5
    <- union-total S2+S4=S6
    <- intersection-total S5*S6=S7'
    <- union-implies-leq S2+S4=S6 _ S4<=S6
    <- leq-implies-intersection S4<=S6 S4*S6=S4
    <- intersection-total S1*S6=S8
    <- intersection-total S1*S4=S9
    <- intersection-right-distributes-over-union* S1+S4=S5 S5*S6=S7'
                                                  S1*S6=S8 S4*S6=S4 S8+S4=S7'
    <- intersection-left-distributes-over-union* S2+S4=S6 S1*S6=S8
                                                 S1*S2=S3 S1*S4=S9 S3+S9=S8
    <- intersection-implies-leq S1*S4=S9 _ S9<=S4
    <- leq-implies-union S9<=S4 S9+S4=S4
    <- union-associative* S3+S9=S8 S8+S4=S7' S9+S4=S4 S3+S4=S7'
    <- union-deterministic S3+S4=S7' S3+S4=S7 eq/ eq/ S7'=S7 
    <- intersection-respects-eq S5*S6=S7' eq/ eq/ S7'=S7 S5*S6=S7.

%worlds () (union-right-distributes-over-intersection _ _ _ _ _ _ _).
%total { } (union-right-distributes-over-intersection _ _ _ _ _ _ _).

%{%
#define MUL_COMMUTATIVE 1
#define ADD_TOTAL 1
#define ADD(X,Y) X*Y
#define ADDN intersection
#define MUL(X,Y) X+Y
#define MULN union
#define EQ eq
BEGIN_ELF
#include "distrib.i"
END_ELF
#undef EQ
#undef ADD
#undef ADDN
#undef MUL
#undef MULN
#undef ADD_TOTAL
#undef MUL_COMMUTATIVE
%}%


%%% set membership w.r.t. union:


%theorem union-left-preserves-member* :
	forall* {S1} {S2} {S3} {N}
	forall {M:lookup S2 N unit/}
	       {U:union S1 S2 S3}
	exists {M:lookup S3 N unit/}
	true.

- : union-left-preserves-member* M U M'
    <- union-left-affects-lookup M U _ M'.

%worlds () (union-left-preserves-member* _ _ _).
%total { } (union-left-preserves-member* _ _ _).


%theorem union-right-preserves-member* :
        forall* {S1} {S2} {S3} {N}
        forall {M:lookup S1 N unit/}
               {U:union S1 S2 S3}
        exists {M:lookup S3 N unit/}
        true.

- : union-right-preserves-member* M U M'
    <- union-right-affects-lookup M U _ M'.

%worlds () (union-right-preserves-member* _ _ _).
%total { } (union-right-preserves-member* _ _ _).


%theorem union-preserves-disjoint-converse:
	forall* {S1} {S2} {S3} {S}
	forall	{D: disjoint S3 S}
		{U: union S1 S2 S3}
	exists	{D1: disjoint S1 S}
		{D2: disjoint S2 S}
	true.

%theorem union-preserves-disjoint-converse/L:
	forall* {S1} {S2} {S3} {S} {B1} {B2}
	forall	{D: disjoint S3 S}
		{U: union S1 S2 S3}
		{D1?: disjoint? S1 S B1}
		{D2?: disjoint? S2 S B2}
	exists	{D1: disjoint S1 S}
		{D2: disjoint S2 S}
	true.

- : union-preserves-disjoint-converse/L _ _ 
	(disjoint?/yes D1) (disjoint?/yes D2) D1 D2.

- : union-preserves-disjoint-converse/L D U
	(disjoint?/no M1 M) _ D1 D2
    <- union-right-preserves-member* M1 U M3
    <- disjoint-lookup-contradiction D M3 M F
    <- false-implies-disjoint F D1
    <- false-implies-disjoint F D2.

- : union-preserves-disjoint-converse/L D U
	_ (disjoint?/no M2 M) D1 D2
    <- union-left-preserves-member* M2 U M3
    <- disjoint-lookup-contradiction D M3 M F
    <- false-implies-disjoint F D1
    <- false-implies-disjoint F D2.

%worlds () (union-preserves-disjoint-converse/L _ _ _ _ _ _).
%total { } (union-preserves-disjoint-converse/L _ _ _ _ _ _).

- : union-preserves-disjoint-converse SD SU S1 S2
    <- disjoint?-total D1?
    <- disjoint?-total D2?
    <- union-preserves-disjoint-converse/L SD SU D1? D2? S1 S2.

%worlds () (union-preserves-disjoint-converse _ _ _ _).
%total { } (union-preserves-disjoint-converse _ _ _ _).



%%% Theorems about size, union and intersection


%theorem union-intersection-size :
	forall*	{S1} {S2} {S3} {S4} {N1} {N2} {N3} {N4} {N}
	forall	{U: union S1 S2 S3}
		{I: intersection S1 S2 S4}
		{SZ1: size S1 N1}
		{SZ2: size S2 N2}
		{SZ3: size S3 N3}
		{SZ4: size S4 N4}
		{P12: plus N1 N2 N}
	exists	{P34: plus N3 N4 N}
	true.

- : union-intersection-size 
	(union/L) (intersection/L) 
	size/0 SZ2 SZ3 size/0 
	plus/z P
    <- plus-right-identity _ P'
    <- size-deterministic SZ2 SZ3 eq/ N2=N3
    <- plus-respects-eq P' N2=N3 nat`eq/ nat`eq/ P.

- : union-intersection-size
	union/L intersection/R
	size/0 size/0 size/0 size/0
        plus/z plus/z.

- : union-intersection-size
	union/R intersection/L
	size/0 size/0 size/0 size/0
        plus/z plus/z.

- : union-intersection-size
	union/R intersection/R
	SZ1 size/0 SZ3 size/0
	N1+0=N N3+0=N
    <- size-deterministic SZ1 SZ3 eq/ N1=N3
    <- plus-respects-eq N1+0=N N1=N3 nat`eq/ nat`eq/ N3+0=N.

- : union-intersection-size
	(union/= U12 unit`union/ nat`eq/) I
        (size/+ SZ1) (size/+ SZ2) (size/+ SZ3) (SZ444: size S444 N444)
        (plus/s N1+SN2=N) SN3+N444=SN
    <- intersection/=-inversion I nat`eq/ _ _ unit`union/ I12 E
    <- plus-total N1+N2=N-1
    <- size-total SZ4
    <- union-intersection-size U12 I12 SZ1 SZ2 SZ3 SZ4 N1+N2=N-1 N3+N4=N-1
    <- plus-swap-succ (plus/s N1+N2=N-1) N1+SN2=SN-1
    <- plus-swap-succ (plus/s N3+N4=N-1) N3+SN4=SN-1
    <- plus-deterministic N1+SN2=SN-1 N1+SN2=N nat`eq/ nat`eq/ SN-1=N
    <- plus-respects-eq N3+SN4=SN-1 nat`eq/ nat`eq/ SN-1=N N3+SN4=N
    <- size-deterministic (size/+ SZ4) SZ444 E SN4=N444
    <- plus-respects-eq (plus/s N3+SN4=N) nat`eq/ SN4=N444 nat`eq/ SN3+N444=SN.

- : union-intersection-size
	(union/< U103 SN0+N1=N2) I
	(size/+ SZ1) (size/+ SZ2) (size/+ SZ3) (SZ444:size S444 N4)
	(plus/s N1+SN2=N) (plus/s N3+N4=N)
    <- intersection/<-inversion I SN0+N1=N2 S4 I104 S4<<N1=S444
    <- shift-preserves-size-converse SZ444 S4<<N1=S444 SZ4
    <- union-intersection-size 
	U103 I104 SZ1 (size/+ SZ2) SZ3 SZ4 N1+SN2=N N3+N4=N.

- : union-intersection-size
	(union/> U023 SN0+N2=N1) I
	(size/+ SZ1) (size/+ SZ2) (size/+ SZ3) (SZ444:size S444 N4)
	(plus/s N1+SN2=N) (plus/s N3+N4=N)
    <- intersection/>-inversion I SN0+N2=N1 S4 I024 S4<<N2=S444
    <- shift-preserves-size-converse SZ444 S4<<N2=S444 SZ4
    <- plus-swap-succ-converse N1+SN2=N SN1+N2=N
    <- union-intersection-size 
	U023 I024 (size/+ SZ1) SZ2 SZ3 SZ4 SN1+N2=N N3+N4=N.

%worlds () (union-intersection-size _ _ _ _ _ _ _ _).
%total (U) (union-intersection-size U _ _ _ _ _ _ _).



